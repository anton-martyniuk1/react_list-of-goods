{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","sortType","isReversed","reset","setState","reverse","sortByAlphabet","sortByLength","this","visibleGoods","sort","g1","g2","localeCompare","length","className","type","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,iFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAWE,IAAME,EAAb,4MACEC,MAAQ,CACNC,SAAU,EACVC,YAAY,GAHhB,EAMEC,MAAQ,WACN,EAAKC,SAAS,CACZH,SAAU,EACVC,YAAY,KATlB,EAaEG,QAAU,WACR,EAAKD,UAAS,SAAAJ,GAAK,MAAK,CACtBE,YAAaF,EAAME,gBAfzB,EAmBEI,eAAiB,WACf,EAAKF,SAAS,CAAEH,SAAU,KApB9B,EAuBEM,aAAe,WACb,EAAKH,SAAS,CAAEH,SAAU,KAxB9B,4CA2BE,WACE,MAAiCO,KAAKR,MAA9BC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,WACZO,EAAY,UAAOX,GAEzB,OAAQG,GACN,KAAK,EACHQ,EAAaC,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAGE,cAAcD,MAC/C,MAEF,KAAK,EACHH,EAAaC,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAGG,OAASF,EAAGE,UAWjD,OAJIZ,GACFO,EAAaJ,UAIb,sBAAKU,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAiC,IAAbd,GAAkB,YAC/CgB,QAAST,KAAKF,eAHhB,iCAQA,wBACEU,KAAK,SACLD,UAAS,4BAAoC,IAAbd,GAAkB,YAClDgB,QAAST,KAAKD,aAHhB,4BAQA,wBACES,KAAK,SACLD,UAAS,6BAAwBb,GAAc,YAC/Ce,QAAST,KAAKH,QAHhB,wBAQIJ,GAAYC,IACd,wBACEc,KAAK,SACLD,UAAU,4BACVE,QAAST,KAAKL,MAHhB,sBAUJ,6BACE,6BACGM,EAAaS,KAAI,SAAAC,GAAI,OACpB,oBACE,UAAQ,OADV,SAIGA,GAFIA,iBA3FrB,GAAyBC,IAAMC,WCzB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3cc3ca87.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype State = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    sortType: 0,\n    isReversed: false,\n  };\n\n  reset = () => {\n    this.setState({\n      sortType: 0,\n      isReversed: false,\n    });\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sortByAlphabet = () => {\n    this.setState({ sortType: 1 });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: 2 });\n  };\n\n  render() {\n    const { sortType, isReversed } = this.state;\n    const visibleGoods = [...goodsFromServer];\n\n    switch (sortType) {\n      case 1:\n        visibleGoods.sort((g1, g2) => g1.localeCompare(g2));\n        break;\n\n      case 2:\n        visibleGoods.sort((g1, g2) => g1.length - g2.length);\n        break;\n\n      default:\n        break;\n    }\n\n    if (isReversed) {\n      visibleGoods.reverse();\n    }\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={`button is-info ${sortType !== 1 && 'is-light'}`}\n            onClick={this.sortByAlphabet}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={`button is-success ${sortType !== 2 && 'is-light'}`}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={`button is-warning ${!isReversed && 'is-light'}`}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {(!!sortType || isReversed) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {visibleGoods.map(good => (\n              <li\n                data-cy=\"Good\"\n                key={good}\n              >\n                {good}\n              </li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}